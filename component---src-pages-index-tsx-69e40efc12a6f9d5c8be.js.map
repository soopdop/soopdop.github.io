{"version":3,"sources":["webpack:///./src/pages/indexPageComponents/PostListItem.tsx","webpack:///./src/pages/indexPageComponents/SiteTitle/index.tsx","webpack:///./src/pages/indexPageComponents/PostCard.tsx","webpack:///./src/pages/index.tsx"],"names":["PostListItem","post","classes","useStyles","title","frontmatter","fields","slug","Card","variant","onClick","setTimeout","navigate","className","postItemCard","CardActionArea","postItemCardArea","Grid","container","postItemLayout","item","xs","thumbnailBox","thumbnail","fluid","childImageSharp","allTextBox","Typography","titleText","date","decriptionText","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","makeStyles","theme","margin","spacing","borderRadius","boxShadow","titleBox","display","flexDirection","alignItems","padding","height","flex","alignContent","overflow","justifyContent","dateText","whiteSpace","textOverflow","typography","body1","fontSize","lineHeight","SiteTitle","siteTitle","Fragment","Box","logoContainer","Logo","subTitle","breakpoints","down","width","PostCard","pageQuery","BlogIndex","data","location","pageContext","site","siteMetadata","posts","allMarkdownRemark","nodes","Layout","Hidden","mdUp","CategorySelect","selectedCategory","md","lg","postListContainer","map","key","xsDown","smUp","smDown","categoryList","CategoryList","position","marginTop","top","alignSelf"],"mappings":"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","file":"component---src-pages-index-tsx-69e40efc12a6f9d5c8be.js","sourcesContent":["import { Card, CardActionArea, Grid, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { navigate } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport React from \"react\"\r\n\r\nconst PostListItem = ({ post }) => {\r\n  const classes = useStyles()\r\n  const title = post.frontmatter.title || post.fields.slug\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      onClick={() => setTimeout(() => navigate(post.fields.slug), 300)}\r\n      className={classes.postItemCard}\r\n    >\r\n      <CardActionArea className={classes.postItemCardArea}>\r\n        <Grid container className={classes.postItemLayout}>\r\n          <Grid item xs={3} className={classes.thumbnailBox}>\r\n            {(post.frontmatter as any).thumbnail !== null && (\r\n              <Img\r\n                fluid={\r\n                  (post.frontmatter as any).thumbnail.childImageSharp.fluid\r\n                }\r\n                className={classes.thumbnail}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={9} className={classes.allTextBox}>\r\n            <Typography variant=\"h3\" className={classes.titleText}>\r\n              {title}\r\n            </Typography>\r\n            <small>{post.frontmatter.date}</small>\r\n            <span\r\n              className={classes.decriptionText}\r\n              dangerouslySetInnerHTML={{\r\n                __html: post.frontmatter.description || post.excerpt,\r\n              }}\r\n              itemProp=\"description\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PostListItem\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  postItemCardArea: {},\r\n  postItemCard: {\r\n    margin: theme.spacing(2, 0, 0, 0),\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"0px 10px 48px -16px rgba(0, 0, 0, 0.25)\",\r\n  },\r\n  titleBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 0, 7, 0),\r\n  },\r\n  thumbnailBox: {\r\n    height: \"100%\",\r\n  },\r\n  allTextBox: {\r\n    flex: \"1\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    padding: theme.spacing(3),\r\n    overflow: \"hidden\",\r\n    justifyContent: \"center\",\r\n  },\r\n  thumbnail: {\r\n    height: \"100%\",\r\n  },\r\n  postItemLayout: {\r\n    height: \"180px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  titleText: {},\r\n  dateText: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  decriptionText: {\r\n    ...theme.typography.body1,\r\n    padding: theme.spacing(1, 0, 0, 0),\r\n    fontSize: \"16px\",\r\n    lineHeight: \"1.5\",\r\n    display: \"-webkit-box\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    \"-webkit-line-clamp\": 3,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n  },\r\n}))\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport Logo from \"../../../components/Logo\"\r\nimport \"./style.scss\"\r\n\r\nconst SiteTitle = ({ siteTitle }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <React.Fragment>\r\n      <Box className={classes.logoContainer}>\r\n        <Logo className={`index-page-logo`} />\r\n      </Box>\r\n      <Typography className={classes.siteTitle} variant=\"h1\">\r\n        {siteTitle}\r\n      </Typography>\r\n      <Typography className={classes.subTitle}>\r\n        Create What You Want to Use.\r\n      </Typography>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  siteTitle: {\r\n    margin: theme.spacing(2, 0, 0, 0),\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    fontSize: \"48px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"36px\",\r\n    },\r\n  },\r\n  subTitle: {\r\n    margin: theme.spacing(-1, 0, 0, 0),\r\n  },\r\n  logoContainer: {\r\n    margin: theme.spacing(4, 0, 0, 0),\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    width: \"130px\",\r\n    height: \"130px\",\r\n  },\r\n}))\r\n","import { Box, Card, CardActionArea, Grid, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { navigate } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport React from \"react\"\r\n\r\nconst PostCard = ({ post }) => {\r\n  const classes = useStyles()\r\n  const title = post.frontmatter.title || post.fields.slug\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      onClick={() => setTimeout(() => navigate(post.fields.slug), 300)}\r\n      className={classes.postItemCard}\r\n    >\r\n      <CardActionArea className={classes.postItemCardArea}>\r\n        <Box className={classes.postItemLayout}>\r\n          <Box className={classes.thumbnailBox}>\r\n            {(post.frontmatter as any).thumbnail !== null && (\r\n              <Img\r\n                fluid={\r\n                  (post.frontmatter as any).thumbnail.childImageSharp.fluid\r\n                }\r\n                className={classes.thumbnail}\r\n              />\r\n            )}\r\n          </Box>\r\n          <Box className={classes.allTextBox}>\r\n            <Typography variant=\"h3\" className={classes.titleText}>\r\n              {title}\r\n            </Typography>\r\n            <Typography className={classes.dateText}>\r\n              {post.frontmatter.date}\r\n            </Typography>\r\n            <span\r\n              className={classes.decriptionText}\r\n              dangerouslySetInnerHTML={{\r\n                __html: post.frontmatter.description || post.excerpt,\r\n              }}\r\n              itemProp=\"description\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </CardActionArea>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PostCard\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  postItemCardArea: {},\r\n  postItemCard: {\r\n    margin: theme.spacing(1, 0, 0, 0),\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"0px 10px 48px -16px rgba(0, 0, 0, 0.25)\",\r\n  },\r\n  postItemLayout: {\r\n    height: \"400px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  thumbnailBox: {\r\n    height: \"200px\",\r\n  },\r\n  allTextBox: {\r\n    flex: \"1\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    padding: theme.spacing(0, 3),\r\n    overflow: \"hidden\",\r\n    justifyContent: \"center\",\r\n  },\r\n  thumbnail: {\r\n    height: \"100%\",\r\n  },\r\n  titleText: {\r\n    fontSize: \"16px\",\r\n  },\r\n  dateText: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    fontSize: \"10px\",\r\n  },\r\n  decriptionText: {\r\n    ...theme.typography.body1,\r\n    padding: theme.spacing(1, 0, 0, 0),\r\n    fontSize: \"12px\",\r\n    lineHeight: \"1.5\",\r\n    display: \"-webkit-box\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    \"-webkit-line-clamp\": 5,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n  },\r\n}))\r\n","import { Box, Grid, Hidden } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { graphql, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { BlogIndexQuery } from \"../../graphql-types\"\nimport CategoryList from \"./indexPageComponents/CategoryList\"\nimport CategorySelect from \"./indexPageComponents/CategorySelect\"\nimport Layout from \"../components/Layout\"\nimport PostListItem from \"./indexPageComponents/PostListItem\"\nimport SEO from \"../components/seo\"\nimport SiteTitle from \"./indexPageComponents/SiteTitle\"\nimport PostCard from \"./indexPageComponents/PostCard\"\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const classes = useStyles()\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout siteTitle={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Grid container>\n        <Grid item xs={12}>\n          <Box className={classes.titleBox}>\n            <SiteTitle siteTitle={siteTitle} />\n          </Box>\n        </Grid>\n        <Hidden mdUp>\n          <Grid item xs={12}>\n            <CategorySelect selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n        <Grid item xs={12} md={9} lg={8}>\n          <Grid container className={classes.postListContainer}>\n            {posts.map(post => {\n              return (\n                <Grid item xs={12} key={post.fields.slug}>\n                  <Hidden xsDown>\n                    <PostListItem post={post} />\n                  </Hidden>\n                  <Hidden smUp>\n                    <PostCard post={post} />\n                  </Hidden>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </Grid>\n        <Hidden smDown>\n          <Grid item xs={12} md={3} lg={4} className={classes.categoryList}>\n            <CategoryList selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(pruneLength: 500)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 600, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nconst useStyles = makeStyles(theme => ({\n  categoryList: {\n    position: \"sticky\",\n    marginTop: \"20px\",\n    top: \"0px\",\n    alignSelf: \"flex-start\",\n  },\n  postListContainer: {\n    margin: theme.spacing(0, 0, 7, 0),\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 0, 7, 0),\n  },\n}))\n"],"sourceRoot":""}