{"version":3,"sources":["webpack:///./src/pages/IndexPageComponents/CategorySelect.tsx"],"names":["handleChange","event","target","value","navigate","kebabCase","CategorySelect","selectedCategory","classes","useStyles","console","log","data","useStaticQuery","variant","className","root","id","labelId","onChange","label","key","totalCount","groupedCategory","group","map","category","index","fieldValue","makeStyles","theme","margin","spacing","width","minWidth"],"mappings":"8FAAA,6HAYMA,EAAe,SAAAC,GACQ,QAAvBA,EAAMC,OAAOC,MACfC,mBAAS,KAETA,mBAAS,eAAeC,IAAUJ,EAAMC,OAAOC,SA4CpCG,UAxCQ,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,iBAClBC,EAAUC,IAChBC,QAAQC,IAAIJ,GACZ,IAAMK,EAAOC,yBAAe,cAc5B,OACE,kBAAC,IAAD,CAAaC,QAAQ,WAAWC,UAAWP,EAAQQ,MACjD,kBAAC,IAAD,CAAYC,GAAG,qCAAf,YACA,kBAAC,IAAD,CACEC,QAAQ,oCACRD,GAAG,8BACHd,MAAOI,EACPY,SAAUnB,EACVoB,MAAM,YAEN,kBAAC,IAAD,CAAUjB,MAAM,MAAMkB,IAAK,GAA3B,QACQT,EAAKU,WAAWA,WADxB,KAGCV,EAAKW,gBAAgBC,MAAMC,KAAI,SAACC,EAAUC,GAAX,OAC9B,kBAAC,IAAD,CAAUxB,MAAOuB,EAASE,WAAYP,IAAKM,GACxCD,EAASE,WADZ,KAC0BF,EAASJ,WADnC,WAWV,IAAMb,EAAYoB,aAAW,SAAAC,GAAK,MAAK,CACrCd,KAAM,CACJe,OAAQD,EAAME,QAAQ,EAAG,EAAG,EAAG,GAC/BC,MAAO,OACPC,SAAU","file":"component---src-pages-index-page-components-category-select-tsx-8bd571addfb4e85e425b.js","sourcesContent":["import {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\"\nimport { graphql, navigate, useStaticQuery } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport React from \"react\"\nimport { CategorySelectQuery } from \"../../../graphql-types\"\n\nconst handleChange = event => {\n  if (event.target.value === \"All\") {\n    navigate(`/`)\n  } else {\n    navigate(`/categories/${kebabCase(event.target.value)}`)\n  }\n}\n\nconst CategorySelect = ({ selectedCategory }) => {\n  const classes = useStyles()\n  console.log(selectedCategory)\n  const data = useStaticQuery(graphql`\n    query CategorySelect {\n      totalCount: allMarkdownRemark(limit: 2000) {\n        totalCount\n      }\n      groupedCategory: allMarkdownRemark(limit: 2000) {\n        group(field: frontmatter___categories) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `) as CategorySelectQuery\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.root}>\n      <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        value={selectedCategory}\n        onChange={handleChange}\n        label=\"category\"\n      >\n        <MenuItem value=\"All\" key={0}>\n          All ({data.totalCount.totalCount})\n        </MenuItem>\n        {data.groupedCategory.group.map((category, index) => (\n          <MenuItem value={category.fieldValue} key={index}>\n            {category.fieldValue} ({category.totalCount})\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default CategorySelect\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(0, 0, 1, 0),\n    width: \"100%\",\n    minWidth: 120,\n  },\n}))\n"],"sourceRoot":""}