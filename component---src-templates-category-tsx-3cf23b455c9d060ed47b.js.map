{"version":3,"sources":["webpack:///./src/templates/category.tsx"],"names":["UsingTypescript","data","location","path","pageContext","title","site","siteMetadata","category","allMarkdownRemark","edges","totalCount","tagHeader","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,8GAgEeA,UAhCsD,SAAC,GAKhE,IAJJC,EAII,EAJJA,KAEAC,GAEI,EAHJC,KAGI,EAFJD,UACAE,EACI,EADJA,YAEQC,EAAUJ,EAAKK,KAAKC,aAApBF,MACAG,EAAaJ,EAAbI,SAFJ,EAG0BP,EAAKQ,kBAA3BC,EAHJ,EAGIA,MAAOC,EAHX,EAGWA,WACTC,EAAeD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,sBACSH,EADT,IAGf,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUG,MAAOA,GACjC,kBAAC,IAAD,CAAKA,MAAOA,IACZ,4BAAKO,GACL,4BACGF,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAV,EAAUS,EAAKG,YAAfZ,MACR,OACE,wBAAIa,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOV,QAKzB,kBAAC,OAAD,CAAMc,GAAG,KAAT,6BAOC,IAAMC,EAAY","file":"component---src-templates-category-tsx-3cf23b455c9d060ed47b.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    totalCount: number\n    edges: [\n      {\n        node: {\n          fields: {\n            slug: string\n          }\n          frontmatter: {\n            title\n          }\n        }\n      }\n    ]\n  }\n}\n\ntype PageContext = {\n  category: string\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps, PageContext>> = ({\n  data,\n  path,\n  location,\n  pageContext,\n}) => {\n  const { title } = data.site.siteMetadata\n  const { category } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\n    } categorized with \"${category}\"`\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport default UsingTypescript\n\nexport const pageQuery = graphql`\n  query($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}