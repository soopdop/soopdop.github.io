{"version":3,"sources":["webpack:///./src/components/SiteTitle/index.tsx","webpack:///./src/templates/PostListTemplate.tsx"],"names":["SiteTitle","siteTitle","classes","useStyles","Fragment","Box","className","logoContainer","Logo","Typography","variant","subTitle","makeStyles","theme","margin","spacing","textOverflow","overflow","whiteSpace","fontSize","breakpoints","down","alignItems","justifyContent","display","width","height","pageQuery","PostListTemplate","data","pageContext","site","siteMetadata","title","posts","allMarkdownRemark","nodes","numPages","currentPage","Layout","Grid","container","item","xs","titleBox","Hidden","mdUp","CategorySelect","selectedCategory","md","lg","postListContainer","map","post","key","fields","slug","xsDown","PostListItem","smUp","PostCard","paginationContainer","smDown","Pagination","size","count","page","color","onChange","_event","navigate","categoryList","CategoryList","position","marginTop","top","alignSelf","flexDirection","padding"],"mappings":"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","file":"component---src-templates-post-list-template-tsx-2c3601e4afd4a7d71a3e.js","sourcesContent":["import { Box, makeStyles, Typography } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport Logo from \"../Logo\"\r\nimport \"./style.scss\"\r\n\r\nconst SiteTitle = ({ siteTitle }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <React.Fragment>\r\n      <Box className={classes.logoContainer}>\r\n        <Logo className={`index-page-logo`} />\r\n      </Box>\r\n      <Typography className={classes.siteTitle} variant=\"h1\">\r\n        {siteTitle}\r\n      </Typography>\r\n      <Typography className={classes.subTitle}>\r\n        Create What You Want to Use.\r\n      </Typography>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  siteTitle: {\r\n    margin: theme.spacing(2, 0, 0, 0),\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    fontSize: \"48px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"36px\",\r\n    },\r\n  },\r\n  subTitle: {\r\n    margin: theme.spacing(-1, 0, 0, 0),\r\n  },\r\n  logoContainer: {\r\n    margin: theme.spacing(4, 0, 0, 0),\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    width: \"130px\",\r\n    height: \"130px\",\r\n  },\r\n}))\r\n","import { Box, Grid, Hidden } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Pagination from \"@material-ui/lab/Pagination\"\nimport { graphql, navigate, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { BlogIndexQuery, SitePageContext } from \"../../graphql-types\"\nimport CategoryList from \"../components/CategoryList\"\nimport CategorySelect from \"../components/CategorySelect\"\nimport Layout from \"../components/Layout\"\nimport PostCard from \"../components/PostCard\"\nimport PostListItem from \"../components/PostListItem\"\nimport SEO from \"../components/seo\"\nimport SiteTitle from \"../components/SiteTitle\"\n\nconst PostListTemplate: React.FC<PageProps<\n  BlogIndexQuery,\n  SitePageContext\n>> = ({ data, pageContext }) => {\n  const classes = useStyles()\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const { numPages, currentPage } = pageContext\n\n  return (\n    <Layout siteTitle={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Grid container>\n        <Grid item xs={12}>\n          <Box className={classes.titleBox}>\n            <SiteTitle siteTitle={siteTitle} />\n          </Box>\n        </Grid>\n        <Hidden mdUp>\n          <Grid item xs={12}>\n            <CategorySelect selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n        <Grid item xs={12} md={9} lg={8}>\n          <Grid container className={classes.postListContainer}>\n            {posts.map(post => {\n              return (\n                <Grid item xs={12} key={post.fields.slug}>\n                  <Hidden xsDown>\n                    <PostListItem post={post} />\n                  </Hidden>\n                  <Hidden smUp>\n                    <PostCard post={post} />\n                  </Hidden>\n                </Grid>\n              )\n            })}\n          </Grid>\n          <Box className={classes.paginationContainer}>\n            <Hidden smDown>\n              <Pagination\n                size=\"large\"\n                count={numPages}\n                page={currentPage}\n                variant=\"outlined\"\n                color=\"primary\"\n                onChange={(_event, page) => {\n                  if (page === 1) {\n                    navigate(`/`)\n                  } else {\n                    navigate(`/page/${page}`)\n                  }\n                }}\n              />\n            </Hidden>\n            <Hidden mdUp>\n              <Pagination\n                size=\"medium\"\n                count={numPages}\n                page={currentPage}\n                variant=\"outlined\"\n                color=\"primary\"\n                onChange={(_event, page) => {\n                  if (page === 1) {\n                    navigate(`/`)\n                  } else {\n                    navigate(`/page/${page}`)\n                  }\n                }}\n              />\n            </Hidden>\n          </Box>\n        </Grid>\n        <Hidden smDown>\n          <Grid item xs={12} md={3} lg={4} className={classes.categoryList}>\n            <CategoryList selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default PostListTemplate\n\nexport const pageQuery = graphql`\n  query BlogIndex($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      nodes {\n        excerpt(pruneLength: 500)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 600, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nconst useStyles = makeStyles(theme => ({\n  categoryList: {\n    position: \"sticky\",\n    marginTop: \"20px\",\n    top: \"0px\",\n    alignSelf: \"flex-start\",\n  },\n  postListContainer: {\n    margin: theme.spacing(0, 0, 2, 0),\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 0, 7, 0),\n  },\n  paginationContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: theme.spacing(0, 0, 7, 0),\n    \"& button\": {\n      fontSize: \"14px\",\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"12px\",\n      },\n    },\n  },\n}))\n"],"sourceRoot":""}