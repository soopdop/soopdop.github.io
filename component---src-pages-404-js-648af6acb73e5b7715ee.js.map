{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["location","title","children","isRootPath","header","className","to","data-is-root-path","Date","href","SEO","description","lang","meta","site","useStaticQuery","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","data","siteTitle","pageQuery"],"mappings":"2FAAA,qCAmCA,IAhCe,SAAC,GAAmC,IAGjD,EAHgBA,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADN,MACmBH,WAiBnB,OAbEI,EADF,EAEI,wBAAIC,UAAU,gBACZ,0BAAMC,GAAG,KAFbF,IAOE,0BAAMC,UAAN,mBAAmCC,GAAG,KADxCF,GAQA,yBAAKC,UAAL,iBAAgCE,oBAAmBJ,GACjD,4BAAQE,UAAU,iBADpB,GAEE,8BAFF,GAGE,sCACK,IAAIG,MADT,iCAGE,uBAAGC,KAAK,4BAPd,c,kCCtBF,iDAYMC,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMZ,EAAY,EAAZA,MAC9Ba,EAASC,yBADiC,mBAiB5CC,EAAkBL,GAAeG,eAAvC,YACMG,EAAY,UAAGH,EAAH,iCAAGA,EAArB,MAEA,OACE,4BACEI,eAAgB,CACdN,QAEFX,MAJF,EAKEkB,cAAeF,EAAY,UAL7B,KAMEJ,KAAM,CACJ,CACEO,KADF,cAEEC,QAASL,GAEX,CACEM,SADF,WAEED,QAASpB,GAEX,CACEqB,SADF,iBAEED,QAASL,GAEX,CACEM,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,SAAS,UAAAP,EAAA,kFAEX,CACEM,KADF,gBAEEC,QAASpB,GAEX,CACEmB,KADF,sBAEEC,QAASL,GAEX,CACEI,KADF,2BAEEC,QAAS,gDAnCP,aA0CZX,eAAmB,CACjBE,KADiB,KAEjBC,KAFiB,GAGjBF,YAAY,IAUd,O,kCC9FA,kGAkBA,UAZqB,SAAC,GAAwB,IAAtBY,EAAqB,EAArBA,KAAMvB,EAAe,EAAfA,SACtBwB,EAAYD,oBAAlB,MAEA,OACE,uBAAQvB,SAAR,EAA4BC,MAAOuB,GACjC,uBAAKvB,MAAM,mBACX,4BAFF,kBAGE,2BAJJ,6DAWK,IAAMwB,EAAN","file":"component---src-pages-404-js-648af6acb73e5b7715ee.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: \"google-site-verification\",\r\n          content: \"D3zX2_B3puuN1KcEveIwHDRw2fcaW00RvY50hcEngIE\",\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"404: Not Found\" />\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}