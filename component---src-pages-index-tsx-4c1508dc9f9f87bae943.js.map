{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","classes","location","pageContext","useStyles","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","container","item","xs","className","titleBox","logo","variant","subTitle","lgUp","selectedCategory","md","lg","postListContainer","map","post","frontmatter","fields","slug","key","onClick","setTimeout","navigate","postItemCard","postItemCardArea","gutterBottom","date","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","mdDown","categoryList","pageQuery","makeStyles","theme","root","flexGrow","position","marginTop","top","alignSelf","margin","spacing","padding","display","flexDirection","alignItems","textOverflow","overflow","whiteSpace","fontSize","breakpoints","down","width","height"],"mappings":"2FAAA,sOAyFeA,UAtEwC,SAAC,GAIlD,MAHJC,EAGI,EAHJA,KAIMC,GADF,EAFJC,SAEI,EADJC,YAEgBC,KACVC,GAAY,UAAAL,EAAKM,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQT,EAAKU,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQN,UAAWA,GACjB,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,CAAMI,WAAS,GACb,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAKC,UAAWd,EAAQe,UACtB,kBAAC,IAAD,CAAMD,UAAWd,EAAQgB,OACzB,kBAAC,IAAD,CAAYF,UAAWd,EAAQI,UAAWa,QAAQ,MAC/Cb,GAEH,kBAAC,IAAD,CAAYU,UAAWd,EAAQkB,UAA/B,kCAKJ,kBAAC,IAAD,CAAQC,MAAI,GACV,kBAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAgBO,iBAAiB,UAGrC,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIQ,GAAI,GAAIC,GAAI,GAC7B,kBAAC,IAAD,CAAMX,WAAS,EAACG,UAAWd,EAAQuB,mBAChCf,EAAMgB,KAAI,SAAAC,GACT,IAAMlB,EAAQkB,EAAKC,YAAYnB,OAASkB,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CAAMhB,MAAI,EAACC,GAAI,GAAIgB,IAAKJ,EAAKE,OAAOC,MAClC,kBAAC,IAAD,CACEX,QAAQ,WACRa,QAAS,kBACPC,YAAW,kBAAMC,mBAASP,EAAKE,OAAOC,QAAO,MAE/Cd,UAAWd,EAAQiC,cAEnB,kBAAC,IAAD,CAAgBnB,UAAWd,EAAQkC,kBACjC,kBAAC,IAAD,CAAYC,cAAY,EAAClB,QAAQ,MAC9BV,GAEH,+BAAQkB,EAAKC,YAAYU,MACzB,uBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CC,SAAS,wBASzB,kBAAC,IAAD,CAAQC,QAAM,GACZ,kBAAC,IAAD,CAAM9B,MAAI,EAACC,GAAI,GAAIQ,GAAI,GAAIC,GAAI,EAAGR,UAAWd,EAAQ2C,cACnD,kBAAC,IAAD,CAAcvB,iBAAiB,aAUpC,IAAMwB,EAAY,aAuBnBzC,EAAY0C,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,CACJC,SAAU,GAEZL,aAAc,CACZM,SAAU,SACVC,UAAW,OACXC,IAAK,MACLC,UAAW,cAEb7B,kBAAmB,CACjB8B,OAAQP,EAAMQ,QAAQ,EAAG,EAAG,EAAG,IAEjCpB,iBAAkB,CAChBqB,QAAST,EAAMQ,QAAQ,IAEzBrB,aAAc,CACZoB,OAAQP,EAAMQ,QAAQ,EAAG,EAAG,EAAG,IAEjCvC,SAAU,CACRyC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZH,QAAST,EAAMQ,QAAQ,EAAG,IAE5BlD,WAAS,GACPiD,OAAQP,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAC/BK,aAAc,WACdC,SAAU,SACVC,WAAY,SACZC,SAAU,QALH,EAMNhB,EAAMiB,YAAYC,KAAK,OAAQ,CAC9BF,SAAU,QAPL,GAUT5C,SAAU,CACRmC,OAAQP,EAAMQ,SAAS,EAAG,EAAG,EAAG,IAElCtC,KAAM,CACJiD,MAAO,QACPC,OAAQ","file":"component---src-pages-index-tsx-4c1508dc9f9f87bae943.js","sourcesContent":["import {\n  Box,\n  Card,\n  CardActionArea,\n  Grid,\n  Hidden,\n  Typography,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\"\nimport { graphql, navigate, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { BlogIndexQuery } from \"../../graphql-types\"\nimport CategoryList from \"../components/CategoryList\"\nimport CategorySelect from \"../components/CategorySelect\"\nimport Layout from \"../components/Layout\"\nimport Logo from \"../components/Logo\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const classes = useStyles()\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout siteTitle={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Grid container>\n        <Grid item xs={12}>\n          <Box className={classes.titleBox}>\n            <Logo className={classes.logo} />\n            <Typography className={classes.siteTitle} variant=\"h1\">\n              {siteTitle}\n            </Typography>\n            <Typography className={classes.subTitle}>\n              Create What You Want to Use.\n            </Typography>\n          </Box>\n        </Grid>\n        <Hidden lgUp>\n          <Grid item xs={12}>\n            <CategorySelect selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n        <Grid item xs={12} md={12} lg={9}>\n          <Grid container className={classes.postListContainer}>\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              return (\n                <Grid item xs={12} key={post.fields.slug}>\n                  <Card\n                    variant=\"outlined\"\n                    onClick={() =>\n                      setTimeout(() => navigate(post.fields.slug), 300)\n                    }\n                    className={classes.postItemCard}\n                  >\n                    <CardActionArea className={classes.postItemCardArea}>\n                      <Typography gutterBottom variant=\"h2\">\n                        {title}\n                      </Typography>\n                      <small>{post.frontmatter.date}</small>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </Grid>\n        <Hidden mdDown>\n          <Grid item xs={12} md={12} lg={3} className={classes.categoryList}>\n            <CategoryList selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  categoryList: {\n    position: \"sticky\",\n    marginTop: \"20px\",\n    top: \"0px\",\n    alignSelf: \"flex-start\",\n  },\n  postListContainer: {\n    margin: theme.spacing(0, 0, 7, 0),\n  },\n  postItemCardArea: {\n    padding: theme.spacing(3),\n  },\n  postItemCard: {\n    margin: theme.spacing(1, 0, 0, 0),\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(7, 0),\n  },\n  siteTitle: {\n    margin: theme.spacing(4, 0, 0, 0),\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    fontSize: \"48px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"36px\",\n    },\n  },\n  subTitle: {\n    margin: theme.spacing(-1, 0, 0, 0),\n  },\n  logo: {\n    width: \"100px\",\n    height: \"100px\",\n  },\n}))\n"],"sourceRoot":""}