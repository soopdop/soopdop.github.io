{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/2020/11/26/deep-javascript-chapter-3/","result":{"data":{"site":{"siteMetadata":{"title":"Harry Park's Blog"}},"markdownRemark":{"id":"55758cc2-9748-54fa-8b68-0c3a18471b0c","excerpt":"3.1. JavaScript의 기본 형과 typeof javascript의 기본형 객체가 아닌 기본적인 키워드로 활용할 수 있는 기본형. number string boolean undefined null symbol typeof의 결과 목록 typeof…","html":"<h2 id=\"31-javascript의-기본-형과-typeof\" style=\"position:relative;\"><a href=\"#31-javascript%EC%9D%98-%EA%B8%B0%EB%B3%B8-%ED%98%95%EA%B3%BC-typeof\" aria-label=\"31 javascript의 기본 형과 typeof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. JavaScript의 기본 형과 typeof</h2>\n<h3 id=\"javascript의-기본형\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-%EA%B8%B0%EB%B3%B8%ED%98%95\" aria-label=\"javascript의 기본형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript의 기본형</h3>\n<p>객체가 아닌 기본적인 키워드로 활용할 수 있는 기본형.</p>\n<ul>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>undefined</li>\n<li>null</li>\n<li>symbol</li>\n</ul>\n<h3 id=\"typeof의-결과-목록\" style=\"position:relative;\"><a href=\"#typeof%EC%9D%98-%EA%B2%B0%EA%B3%BC-%EB%AA%A9%EB%A1%9D\" aria-label=\"typeof의 결과 목록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typeof의 결과 목록</h3>\n<p>typeof는 문자열을 반환한다.</p>\n<ul>\n<li>“undefined”</li>\n<li>“boolean”</li>\n<li>“number”</li>\n<li>“string”</li>\n<li>“object”</li>\n<li>“function”</li>\n<li>“symbol”</li>\n</ul>\n<h3 id=\"typeof의-결과-중-특이-한-것\" style=\"position:relative;\"><a href=\"#typeof%EC%9D%98-%EA%B2%B0%EA%B3%BC-%EC%A4%91-%ED%8A%B9%EC%9D%B4-%ED%95%9C-%EA%B2%83\" aria-label=\"typeof의 결과 중 특이 한 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typeof의 결과 중 특이 한 것</h3>\n<p><strong>“typeof null은 object이다.”</strong> 따라서, typeof를 이용해서 object인지 체크한 뒤 어떤 동작을 추가하려면, null 체크를 따로 먼저 해주는 것이 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aaa <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> aaa <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something with aaa</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"32-new-string-string-그리고-\" style=\"position:relative;\"><a href=\"#32-new-string-string-%EA%B7%B8%EB%A6%AC%EA%B3%A0-\" aria-label=\"32 new string string 그리고  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. new String(\"\"), String(\"\"), 그리고 \"\"</h2>\n<p>Javascript의 문자열은 기본형(primitive)과 객체형 두가지 형태로 존재한다.</p>\n<h3 id=\"new-string은-래퍼객체이고-과-string은-기본형이다\" style=\"position:relative;\"><a href=\"#new-string%EC%9D%80-%EB%9E%98%ED%8D%BC%EA%B0%9D%EC%B2%B4%EC%9D%B4%EA%B3%A0-%EA%B3%BC-string%EC%9D%80-%EA%B8%B0%EB%B3%B8%ED%98%95%EC%9D%B4%EB%8B%A4\" aria-label=\"new string은 래퍼객체이고 과 string은 기본형이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new String()은 래퍼객체이고, \"\"과 String(\"\")은 기본형이다</h3>\n<p>String(\"\")은 표준에 정의된 일련의 과정을 통해서 결국 기본형을 리턴한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//object</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// string</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// string</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span> <span class=\"token operator\">===</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"기본형은-레퍼객체나-object의-인스턴스가-아니다\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%ED%98%95%EC%9D%80-%EB%A0%88%ED%8D%BC%EA%B0%9D%EC%B2%B4%EB%82%98-object%EC%9D%98-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%EC%95%84%EB%8B%88%EB%8B%A4\" aria-label=\"기본형은 레퍼객체나 object의 인스턴스가 아니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본형은 레퍼객체나 Object의 인스턴스가 아니다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"기본형에는-속성을-추가할-수-없다\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%ED%98%95%EC%97%90%EB%8A%94-%EC%86%8D%EC%84%B1%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%A0-%EC%88%98-%EC%97%86%EB%8B%A4\" aria-label=\"기본형에는 속성을 추가할 수 없다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본형에는 속성을 추가할 수 없다</h3>\n<p>정확히 말하자면, 기본형의 프로퍼티 접근시 내부적으로 new String(\"\")으로 레퍼객체를 만들었다가 바로 사라지기 때문인데, 이 책에서는 그러한 설명이 없다. 설명은 이곳 : <a href=\"http://noritersand.tistory.com/536\">래퍼 객체</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> test <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// new String(test).length와 같다.</span>\ntest<span class=\"token punctuation\">.</span>abc <span class=\"token operator\">=</span> <span class=\"token string\">\"abc\"</span> <span class=\"token comment\">// new String(test).abc = \"abc\"와 같다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>abc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined 있을리 없음.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"stringprototype에-함수를-추가하면-기본형에서도-그-함수를-쓸-수-있다\" style=\"position:relative;\"><a href=\"#stringprototype%EC%97%90-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%B6%94%EA%B0%80%ED%95%98%EB%A9%B4-%EA%B8%B0%EB%B3%B8%ED%98%95%EC%97%90%EC%84%9C%EB%8F%84-%EA%B7%B8-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%93%B8-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"stringprototype에 함수를 추가하면 기본형에서도 그 함수를 쓸 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String.prototype에 함수를 추가하면 기본형에서도 그 함수를 쓸 수 있다</h3>\n<p>이 또한 프로퍼티 접근시 래퍼 객체를 생성해서 호출하기 때문에 가능한 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getLength</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> test <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// new String(test).getLength()와 같다.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"33-글로벌-변수\" style=\"position:relative;\"><a href=\"#33-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98\" aria-label=\"33 글로벌 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3. 글로벌 변수</h2>\n<p>많은 JavaScript 개발자가 글로벌 변수를 사용한다. 아무 생각 없이 변수를 사용했다면 글로벌 변수이다.</p>\n<h3 id=\"글로벌-변수를-자제-해야-하는-이유\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9E%90%EC%A0%9C-%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"글로벌 변수를 자제 해야 하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 변수를 자제 해야 하는 이유</h3>\n<h4 id=\"소스를-나눠서-관리할-때-각-소스-끼리-충돌-발생-가능성이-있다\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EB%A5%BC-%EB%82%98%EB%88%A0%EC%84%9C-%EA%B4%80%EB%A6%AC%ED%95%A0-%EB%95%8C-%EA%B0%81-%EC%86%8C%EC%8A%A4-%EB%81%BC%EB%A6%AC-%EC%B6%A9%EB%8F%8C-%EB%B0%9C%EC%83%9D-%EA%B0%80%EB%8A%A5%EC%84%B1%EC%9D%B4-%EC%9E%88%EB%8B%A4\" aria-label=\"소스를 나눠서 관리할 때 각 소스 끼리 충돌 발생 가능성이 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스를 나눠서 관리할 때 각 소스 끼리 충돌 발생 가능성이 있다</h4>\n<p>예를 들면, <code class=\"language-text\">xhr = new XMLHttpRequest()</code>가 여러 소스에 있을 경우 같은 xhr을 덮어 쓰게 된다.</p>\n<h4 id=\"서버의-응답을-기다리는-등의-비동기식-처리-시-문제-발생-가능성이-있다\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EC%9D%98-%EC%9D%91%EB%8B%B5%EC%9D%84-%EA%B8%B0%EB%8B%A4%EB%A6%AC%EB%8A%94-%EB%93%B1%EC%9D%98-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%8B%9D-%EC%B2%98%EB%A6%AC-%EC%8B%9C-%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D-%EA%B0%80%EB%8A%A5%EC%84%B1%EC%9D%B4-%EC%9E%88%EB%8B%A4\" aria-label=\"서버의 응답을 기다리는 등의 비동기식 처리 시 문제 발생 가능성이 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버의 응답을 기다리는 등의 비동기식 처리 시 문제 발생 가능성이 있다</h4>\n<p>위와 같이 xhr을 공유하거나 겹치게 사용하는 경우 여러 곳에서 다른 xhr.onreadystatechange를 등록하게 되고, 응답이 오기전에 두 번 이상의 요청을 보낸 경우 앞의 응답이 온 것에 대해서 처리하지 못하게 된다.</p>\n<h4 id=\"메모리-관리-차원에서-좋지-않다\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%B0%A8%EC%9B%90%EC%97%90%EC%84%9C-%EC%A2%8B%EC%A7%80-%EC%95%8A%EB%8B%A4\" aria-label=\"메모리 관리 차원에서 좋지 않다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 관리 차원에서 좋지 않다.</h4>\n<p>변수들의 레퍼런스 카운터가 0가 되지 않는 이상 가비지 컬렉터가 메모리를 해제하지 않으므로, 잠시 사용할 변수는 로컬 변수로 선언하는 것이 옳다.</p>\n<h2 id=\"34-글로벌-변수-정의\" style=\"position:relative;\"><a href=\"#34-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%A0%95%EC%9D%98\" aria-label=\"34 글로벌 변수 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4. 글로벌 변수 정의</h2>\n<h3 id=\"글로벌-변수-정의-방법\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%A0%95%EC%9D%98-%EB%B0%A9%EB%B2%95\" aria-label=\"글로벌 변수 정의 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 변수 정의 방법</h3>\n<ol>\n<li><code class=\"language-text\">&lt;script&gt;</code> 안에 <code class=\"language-text\">var</code> 로 선언한다.</li>\n<li>모든 곳에서 <code class=\"language-text\">var</code> 없이 선언한다. 단, 이 경우 상위 scope를 탐색 해 본 후 없으면 글로벌 변수가 된다.</li>\n<li><code class=\"language-text\">for</code>문에서 <code class=\"language-text\">i</code>를 잘못 사용하면 오동작의 원인이 된다.</li>\n</ol>\n<h2 id=\"35-window-객체\" style=\"position:relative;\"><a href=\"#35-window-%EA%B0%9D%EC%B2%B4\" aria-label=\"35 window 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5. Window 객체</h2>\n<p>글로벌 영역을 관장하는 “The Global Object”이다. 이 객체는 브라우저가 제공하며 약간 특수한 성질을 가지고 있다.</p>\n<ul>\n<li>new 로 생성할 수 없다.</li>\n<li>함수로 호출할 수 없다.</li>\n<li>프로토타입이 없다.</li>\n</ul>\n<h3 id=\"window는-windowwindowwindow이다\" style=\"position:relative;\"><a href=\"#window%EB%8A%94-windowwindowwindow%EC%9D%B4%EB%8B%A4\" aria-label=\"window는 windowwindowwindow이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window는 window.window.window이다</h3>\n<p>window는 재귀적인 형태를 가지고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window <span class=\"token operator\">===</span> window<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3 id=\"글로벌-변수에-프로퍼티로-접근이-가능하다\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EC%97%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EB%A1%9C-%EC%A0%91%EA%B7%BC%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\" aria-label=\"글로벌 변수에 프로퍼티로 접근이 가능하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 변수에 프로퍼티로 접근이 가능하다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3 id=\"글로벌-변수에-이름으로-접근도-가능하다\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EC%97%90-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%A0%91%EA%B7%BC%EB%8F%84-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\" aria-label=\"글로벌 변수에 이름으로 접근도 가능하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 변수에 이름으로 접근도 가능하다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">var</span> a2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"글로벌-함수-호출도-같은-방법으로-가능하다\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C%EB%8F%84-%EA%B0%99%EC%9D%80-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\" aria-label=\"글로벌 함수 호출도 같은 방법으로 가능하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 함수 호출도 같은 방법으로 가능하다</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"foo\"</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">[</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// foo</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"36-글로벌-변수-선언-방법과-차이\" style=\"position:relative;\"><a href=\"#36-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8-%EB%B0%A9%EB%B2%95%EA%B3%BC-%EC%B0%A8%EC%9D%B4\" aria-label=\"36 글로벌 변수 선언 방법과 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.6. 글로벌 변수 선언 방법과 차이</h2>\n<p>글로벌 변수를 선언하는데는 몇가지 방법이 있다.</p>\n<ol>\n<li>글로벌 스코프에서 var 키워드를 이용한 선언.</li>\n<li>특정 스코프에서 상위 스코프에 선언되지 않은 변수를 var 선언.</li>\n<li>window 객체에 속성 추가.</li>\n</ol>\n<h3 id=\"hoisting-나-여기-왜-이-항목이-있는거지\" style=\"position:relative;\"><a href=\"#hoisting-%EB%82%98-%EC%97%AC%EA%B8%B0-%EC%99%9C-%EC%9D%B4-%ED%95%AD%EB%AA%A9%EC%9D%B4-%EC%9E%88%EB%8A%94%EA%B1%B0%EC%A7%80\" aria-label=\"hoisting 나 여기 왜 이 항목이 있는거지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hoisting (나: 여기 왜 이 항목이 있는거지?)</h3>\n<p>이 책에서 사용한 용어는 아니지만, JavaScript는 변수와 함수의 선언을 hoisting(끌어올림) 한다. 즉, 아래 쪽에 선언한 변수와 함수를 위에서 접근할 수 있다는 뜻이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\n  bar <span class=\"token operator\">=</span> <span class=\"token string\">\"bar\"</span> <span class=\"token comment\">// 지역 변수의 할당, 전역 변수의 선언이 아니다.</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span> <span class=\"token comment\">// bar</span>\n  <span class=\"token keyword\">var</span> bar <span class=\"token comment\">// declaration here.</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span> <span class=\"token comment\">// error!</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"37-var-키워드의-효율적인-사용\" style=\"position:relative;\"><a href=\"#37-var-%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EC%82%AC%EC%9A%A9\" aria-label=\"37 var 키워드의 효율적인 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.7. var 키워드의 효율적인 사용</h2>\n<p>JSLint는 항상 다음을 권하는 메세지를 출력한다.</p>\n<blockquote>\n<p>모든 변수는 함수의 위쪽에 묶어서 선언해야 한다.</p>\n</blockquote>\n<p>이렇게 하는 것에는 몇가지 이유가 있다.</p>\n<h3 id=\"초기화-실수의-최소화하기-위해서\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EA%B8%B0%ED%99%94-%EC%8B%A4%EC%88%98%EC%9D%98-%EC%B5%9C%EC%86%8C%ED%99%94%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C\" aria-label=\"초기화 실수의 최소화하기 위해서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>초기화 실수의 최소화하기 위해서</h3>\n<p>이 책에 나오는 이유는 그다지 명확하지가 않다. 내 생각은 다음과 같다. “선언되지 않은 변수”와 “초기화 되지 않은 변수”는 모두 <code class=\"language-text\">typeof</code>의 결과로 <code class=\"language-text\">undefined</code>를 리턴한다. 우리는 때로 이것을 구분해야할 필요가 있다. 소스가 길어지면 “어딘가”에 선언되어 있을지도 모르는 변수를 재선언을 하는 등의 문제를 만들 수 있기 때문이다.</p>\n<h3 id=\"변수-관리를-잘-하기-위해서\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9E%98-%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C\" aria-label=\"변수 관리를 잘 하기 위해서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 관리를 잘 하기 위해서</h3>\n<p>책보다 설명을 잘 할 수 있을 듯 하다. Javascript는 nested 함수를 지원하는데, 변수를 var 없이 할당하면 글로벌 변수가 만들어 지거나 이전 스코프의 변수를 변경하게 된다. 게다가 hoisting까지 지원하기 때문에 변수를 잘 관리 하지 않으면 버그를 만들어 내기 매우 쉬운 환경이다. 따라서 모든 함수의 도입부에 로컬 변수를 잘 선언해 이러한 혼란을 막는데 도움을 줄 수 있다.</p>\n<h3 id=\"minifying이-잘-되도록\" style=\"position:relative;\"><a href=\"#minifying%EC%9D%B4-%EC%9E%98-%EB%90%98%EB%8F%84%EB%A1%9D\" aria-label=\"minifying이 잘 되도록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Minifying이 잘 되도록</h3>\n<p>minifying할 때 소스의 부피를 더 줄일 수 있다 한다.</p>\n<h2 id=\"38-글로벌-변수-최소화하기\" style=\"position:relative;\"><a href=\"#38-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%B5%9C%EC%86%8C%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"38 글로벌 변수 최소화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.8. 글로벌 변수 최소화하기</h2>\n<p>다음과 같은 두가지 방법으로 글로벌 변수를 회피할 수 있다.</p>\n<ol>\n<li>클로저 사용하기</li>\n<li>\n<p>모듈/네임스페이스 패턴 사용하기</p>\n<ul>\n<li>Jquery의 $처럼, window.$에 모든 것을 넣어 모듈 처럼 이용하는 방법</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"39-변수-사용-방법과-성능\" style=\"position:relative;\"><a href=\"#39-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95%EA%B3%BC-%EC%84%B1%EB%8A%A5\" aria-label=\"39 변수 사용 방법과 성능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.9. 변수 사용 방법과 성능</h2>\n<p><strong>외부 스코프의 변수를 그대로 사용하는 것이 아니라, 지역변수로 한번 참조한 뒤 그 지역변수를 사용하는 것이 성능에 도움이 된다.</strong> 현재의 스코프에 어떤 변수가 없을 때마다, 재귀적으로 상위 스코프로 탐색을 실시하게 되기 때문이다.</p>","frontmatter":{"title":"속깊은 JavaScript, Chapter 3. JavaScript의 변수","date":"November 26, 2020","description":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#31-javascript%EC%9D%98-%EA%B8%B0%EB%B3%B8-%ED%98%95%EA%B3%BC-typeof\">3.1. JavaScript의 기본 형과 typeof</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#javascript%EC%9D%98-%EA%B8%B0%EB%B3%B8%ED%98%95\">javascript의 기본형</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#typeof%EC%9D%98-%EA%B2%B0%EA%B3%BC-%EB%AA%A9%EB%A1%9D\">typeof의 결과 목록</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#typeof%EC%9D%98-%EA%B2%B0%EA%B3%BC-%EC%A4%91-%ED%8A%B9%EC%9D%B4-%ED%95%9C-%EA%B2%83\">typeof의 결과 중 특이 한 것</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#32-new-string-string-%EA%B7%B8%EB%A6%AC%EA%B3%A0-\">3.2. new String(\"\"), String(\"\"), 그리고 \"\"</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#new-string%EC%9D%80-%EB%9E%98%ED%8D%BC%EA%B0%9D%EC%B2%B4%EC%9D%B4%EA%B3%A0-%EA%B3%BC-string%EC%9D%80-%EA%B8%B0%EB%B3%B8%ED%98%95%EC%9D%B4%EB%8B%A4\">new String()은 래퍼객체이고, \"\"과 String(\"\")은 기본형이다</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%B0%EB%B3%B8%ED%98%95%EC%9D%80-%EB%A0%88%ED%8D%BC%EA%B0%9D%EC%B2%B4%EB%82%98-object%EC%9D%98-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%EC%95%84%EB%8B%88%EB%8B%A4\">기본형은 레퍼객체나 Object의 인스턴스가 아니다</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%B0%EB%B3%B8%ED%98%95%EC%97%90%EB%8A%94-%EC%86%8D%EC%84%B1%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%A0-%EC%88%98-%EC%97%86%EB%8B%A4\">기본형에는 속성을 추가할 수 없다</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#stringprototype%EC%97%90-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%B6%94%EA%B0%80%ED%95%98%EB%A9%B4-%EA%B8%B0%EB%B3%B8%ED%98%95%EC%97%90%EC%84%9C%EB%8F%84-%EA%B7%B8-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%93%B8-%EC%88%98-%EC%9E%88%EB%8B%A4\">String.prototype에 함수를 추가하면 기본형에서도 그 함수를 쓸 수 있다</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#33-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98\">3.3. 글로벌 변수</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9E%90%EC%A0%9C-%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">글로벌 변수를 자제 해야 하는 이유</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#34-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%A0%95%EC%9D%98\">3.4. 글로벌 변수 정의</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%A0%95%EC%9D%98-%EB%B0%A9%EB%B2%95\">글로벌 변수 정의 방법</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#35-window-%EA%B0%9D%EC%B2%B4\">3.5. Window 객체</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#window%EB%8A%94-windowwindowwindow%EC%9D%B4%EB%8B%A4\">window는 window.window.window이다</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EC%97%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EB%A1%9C-%EC%A0%91%EA%B7%BC%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\">글로벌 변수에 프로퍼티로 접근이 가능하다</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EC%97%90-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%A0%91%EA%B7%BC%EB%8F%84-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\">글로벌 변수에 이름으로 접근도 가능하다</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EA%B8%80%EB%A1%9C%EB%B2%8C-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C%EB%8F%84-%EA%B0%99%EC%9D%80-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\">글로벌 함수 호출도 같은 방법으로 가능하다</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#36-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8-%EB%B0%A9%EB%B2%95%EA%B3%BC-%EC%B0%A8%EC%9D%B4\">3.6. 글로벌 변수 선언 방법과 차이</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#hoisting-%EB%82%98-%EC%97%AC%EA%B8%B0-%EC%99%9C-%EC%9D%B4-%ED%95%AD%EB%AA%A9%EC%9D%B4-%EC%9E%88%EB%8A%94%EA%B1%B0%EC%A7%80\">Hoisting (나: 여기 왜 이 항목이 있는거지?)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/11/26/deep-javascript-chapter-3/#37-var-%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EC%82%AC%EC%9A%A9\">3.7. var 키워드의 효율적인 사용</a></p>\n<ul>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EC%B4%88%EA%B8%B0%ED%99%94-%EC%8B%A4%EC%88%98%EC%9D%98-%EC%B5%9C%EC%86%8C%ED%99%94%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C\">초기화 실수의 최소화하기 위해서</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#%EB%B3%80%EC%88%98-%EA%B4%80%EB%A6%AC%EB%A5%BC-%EC%9E%98-%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C\">변수 관리를 잘 하기 위해서</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#minifying%EC%9D%B4-%EC%9E%98-%EB%90%98%EB%8F%84%EB%A1%9D\">Minifying이 잘 되도록</a></li>\n</ul>\n</li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#38-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98-%EC%B5%9C%EC%86%8C%ED%99%94%ED%95%98%EA%B8%B0\">3.8. 글로벌 변수 최소화하기</a></li>\n<li><a href=\"/2020/11/26/deep-javascript-chapter-3/#39-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95%EA%B3%BC-%EC%84%B1%EB%8A%A5\">3.9. 변수 사용 방법과 성능</a></li>\n</ul>"},"previous":{"fields":{"slug":"/2020/11/26/deep-javascript-chapter-2/"},"frontmatter":{"title":"속깊은 JavaScript, Chapter 2. JavaScript의 스코프와 클로저"}},"next":{"fields":{"slug":"/2020/11/26/deep-javascript-chapter-4/"},"frontmatter":{"title":"속깊은 JavaScript, Chapter 4. 프로토타입과 객체지향, 그리고 상속"}}},"pageContext":{"id":"55758cc2-9748-54fa-8b68-0c3a18471b0c","previousPostId":"87de58ee-7f30-5111-8624-ba9ac8e9cbab","nextPostId":"df91b1a6-820e-5c73-b25c-c1ac1930b9cb"}},"staticQueryHashes":["2841359383"]}