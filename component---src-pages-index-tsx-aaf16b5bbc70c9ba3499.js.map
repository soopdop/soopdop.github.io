{"version":3,"sources":["webpack:///./src/components/SiteTitle/index.tsx","webpack:///./src/pages/index.tsx"],"names":["SiteTitle","siteTitle","classes","useStyles","Fragment","Box","className","logoContainer","Logo","Typography","variant","subTitle","makeStyles","theme","margin","spacing","textOverflow","overflow","whiteSpace","fontSize","breakpoints","down","alignItems","justifyContent","display","width","height","pageQuery","BlogIndex","data","location","pageContext","site","siteMetadata","title","posts","allMarkdownRemark","nodes","Layout","Grid","container","item","xs","titleBox","Hidden","mdUp","CategorySelect","selectedCategory","md","lg","postListContainer","map","post","key","fields","slug","xsDown","PostListItem","smUp","PostCard","smDown","categoryList","CategoryList","position","marginTop","top","alignSelf","flexDirection","padding"],"mappings":"4UAsBeA,G,UAjBG,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UACbC,EAAUC,IAChB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAKC,UAAWJ,EAAQK,eACtB,kBAACC,EAAA,EAAD,CAAMF,UAAS,qBAEjB,kBAACG,EAAA,EAAD,CAAYH,UAAWJ,EAAQD,UAAWS,QAAQ,MAC/CT,GAEH,kBAACQ,EAAA,EAAD,CAAYH,UAAWJ,EAAQS,UAA/B,mCASAR,EAAYS,aAAW,SAAAC,GAAK,YAAK,CACrCZ,WAAS,GACPa,OAAQD,EAAME,QAAQ,EAAG,EAAG,EAAG,GAC/BC,aAAc,WACdC,SAAU,SACVC,WAAY,SACZC,SAAU,QALH,EAMNN,EAAMO,YAAYC,KAAK,OAAQ,CAC9BF,SAAU,QAPL,GAUTR,SAAU,CACRG,OAAQD,EAAME,SAAS,EAAG,EAAG,EAAG,IAElCR,cAAe,CACbO,OAAQD,EAAME,QAAQ,EAAG,EAAG,EAAG,GAC/BO,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,MAAO,QACPC,OAAQ,aCoBCC,GAFEC,UAjDwC,SAAC,GAIlD,MAHJC,EAGI,EAHJA,KAIM3B,GADF,EAFJ4B,SAEI,EADJC,YAEgB5B,KACVF,GAAY,UAAA4B,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAACC,EAAA,EAAD,CAAQrC,UAAWA,GACjB,kBAAC,IAAD,CAAKiC,MAAM,cACX,kBAACK,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrC,EAAA,EAAD,CAAKC,UAAWJ,EAAQyC,UACtB,kBAAC,EAAD,CAAW1C,UAAWA,MAG1B,kBAAC2C,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAgBC,iBAAiB,UAGrC,kBAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAGC,GAAI,GAC5B,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAAClC,UAAWJ,EAAQgD,mBAChCf,EAAMgB,KAAI,SAAAC,GACT,OACE,kBAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIW,IAAKD,EAAKE,OAAOC,MAClC,kBAACX,EAAA,EAAD,CAAQY,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcL,KAAMA,KAEtB,kBAACR,EAAA,EAAD,CAAQc,MAAI,GACV,kBAACC,EAAA,EAAD,CAAUP,KAAMA,WAO5B,kBAACR,EAAA,EAAD,CAAQgB,QAAM,GACZ,kBAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAG3C,UAAWJ,EAAQ2D,cAClD,kBAACC,EAAA,EAAD,CAAcf,iBAAiB,aAUlB,cA6BnB5C,EAAYS,aAAW,SAAAC,GAAK,MAAK,CACrCgD,aAAc,CACZE,SAAU,SACVC,UAAW,OACXC,IAAK,MACLC,UAAW,cAEbhB,kBAAmB,CACjBpC,OAAQD,EAAME,QAAQ,EAAG,EAAG,EAAG,IAEjC4B,SAAU,CACRnB,QAAS,OACT2C,cAAe,SACf7C,WAAY,SACZ8C,QAASvD,EAAME,QAAQ,EAAG,EAAG,EAAG","file":"component---src-pages-index-tsx-aaf16b5bbc70c9ba3499.js","sourcesContent":["import { Box, makeStyles, Typography } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport Logo from \"../Logo\"\r\nimport \"./style.scss\"\r\n\r\nconst SiteTitle = ({ siteTitle }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <React.Fragment>\r\n      <Box className={classes.logoContainer}>\r\n        <Logo className={`index-page-logo`} />\r\n      </Box>\r\n      <Typography className={classes.siteTitle} variant=\"h1\">\r\n        {siteTitle}\r\n      </Typography>\r\n      <Typography className={classes.subTitle}>\r\n        Create What You Want to Use.\r\n      </Typography>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  siteTitle: {\r\n    margin: theme.spacing(2, 0, 0, 0),\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    fontSize: \"48px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"36px\",\r\n    },\r\n  },\r\n  subTitle: {\r\n    margin: theme.spacing(-1, 0, 0, 0),\r\n  },\r\n  logoContainer: {\r\n    margin: theme.spacing(4, 0, 0, 0),\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    width: \"130px\",\r\n    height: \"130px\",\r\n  },\r\n}))\r\n","import { Box, Grid, Hidden } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { graphql, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { BlogIndexQuery } from \"../../graphql-types\"\nimport CategoryList from \"../components/CategoryList\"\nimport CategorySelect from \"../components/CategorySelect\"\nimport Layout from \"../components/Layout\"\nimport PostCard from \"../components/PostCard\"\nimport PostListItem from \"../components/PostListItem\"\nimport SEO from \"../components/seo\"\nimport SiteTitle from \"../components/SiteTitle\"\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const classes = useStyles()\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout siteTitle={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Grid container>\n        <Grid item xs={12}>\n          <Box className={classes.titleBox}>\n            <SiteTitle siteTitle={siteTitle} />\n          </Box>\n        </Grid>\n        <Hidden mdUp>\n          <Grid item xs={12}>\n            <CategorySelect selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n        <Grid item xs={12} md={9} lg={8}>\n          <Grid container className={classes.postListContainer}>\n            {posts.map(post => {\n              return (\n                <Grid item xs={12} key={post.fields.slug}>\n                  <Hidden xsDown>\n                    <PostListItem post={post} />\n                  </Hidden>\n                  <Hidden smUp>\n                    <PostCard post={post} />\n                  </Hidden>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </Grid>\n        <Hidden smDown>\n          <Grid item xs={12} md={3} lg={4} className={classes.categoryList}>\n            <CategoryList selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(pruneLength: 500)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 600, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nconst useStyles = makeStyles(theme => ({\n  categoryList: {\n    position: \"sticky\",\n    marginTop: \"20px\",\n    top: \"0px\",\n    alignSelf: \"flex-start\",\n  },\n  postListContainer: {\n    margin: theme.spacing(0, 0, 7, 0),\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 0, 7, 0),\n  },\n}))\n"],"sourceRoot":""}