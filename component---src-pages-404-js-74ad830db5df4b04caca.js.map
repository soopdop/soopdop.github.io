{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","data","location","siteTitle","pageQuery"],"mappings":"2FAAA,iDAYMA,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9BC,EAASC,yBADiC,mBAiB5CC,EAAkBN,GAAeI,eAAvC,YACMG,EAAY,UAAGH,EAAH,iCAAGA,EAArB,MAEA,OACE,4BACEI,eAAgB,CACdP,QAEFE,MAJF,EAKEM,cAAeF,EAAY,UAL7B,KAMEL,KAAM,CACJ,CACEQ,KADF,cAEEC,QAASL,GAEX,CACEM,SADF,WAEED,QAASR,GAEX,CACES,SADF,iBAEED,QAASL,GAEX,CACEM,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,SAAS,UAAAP,EAAA,kFAEX,CACEM,KADF,gBAEEC,QAASR,GAEX,CACEO,KADF,sBAEEC,QAASL,GAEX,CACEI,KADF,2BAEEC,QAAS,gDAnCP,aA0CZZ,eAAmB,CACjBE,KADiB,KAEjBC,KAFiB,GAGjBF,YAAY,IAUd,O,kCC9FA,kGAkBA,UAZqB,SAAC,GAAwB,IAAtBa,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,EAAYF,oBAAlB,MAEA,OACE,uBAAQC,SAAR,EAA4BX,MAAOY,GACjC,uBAAKZ,MAAM,mBACX,4BAFF,kBAGE,2BAJJ,6DAWK,IAAMa,EAAN","file":"component---src-pages-404-js-74ad830db5df4b04caca.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: \"google-site-verification\",\n          content: \"D3zX2_B3puuN1KcEveIwHDRw2fcaW00RvY50hcEngIE\",\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}