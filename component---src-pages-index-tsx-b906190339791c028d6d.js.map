{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/seo.js"],"names":["BlogIndex","data","classes","location","pageContext","useStyles","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","container","item","xs","className","titleBox","src","height","variant","subTitle","lgUp","selectedCategory","md","lg","postListContainer","map","post","frontmatter","fields","slug","key","onClick","setTimeout","navigate","postItemCard","postItemCardArea","gutterBottom","date","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","mdDown","categoryList","pageQuery","makeStyles","theme","root","flexGrow","position","marginTop","top","alignSelf","margin","spacing","padding","display","flexDirection","alignItems","textOverflow","overflow","whiteSpace","fontSize","breakpoints","down","SEO","lang","meta","useStaticQuery","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property"],"mappings":"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","file":"component---src-pages-index-tsx-b906190339791c028d6d.js","sourcesContent":["import {\n  AppBar,\n  Box,\n  Card,\n  CardActionArea,\n  Container,\n  CssBaseline,\n  Divider,\n  FormControl,\n  Grid,\n  Hidden,\n  IconButton,\n  InputBase,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  Select,\n  Slide,\n  Toolbar,\n  Typography,\n  useScrollTrigger,\n} from \"@material-ui/core\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport { BlogIndexQuery } from \"../../graphql-types\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport { createStyles, fade, Theme, makeStyles } from \"@material-ui/core/styles\"\nimport CategoryList from \"../components/CategoryList\"\nimport { navigate } from \"gatsby\"\nimport Fab from \"@material-ui/core/Fab\"\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\"\nimport Zoom from \"@material-ui/core/Zoom\"\nimport Footer from \"../components/footer\"\nimport CategorySelect from \"../components/CategorySelect\"\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const classes = useStyles()\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout siteTitle={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Grid container>\n        <Grid item xs={12}>\n          <Box className={classes.titleBox}>\n            <img src=\"/blog-icon-100.gif\" height=\"100px\" />\n            <Typography className={classes.siteTitle} variant=\"h1\">\n              {siteTitle}\n            </Typography>\n            <Typography className={classes.subTitle}>\n              Create What You Want to Use.\n            </Typography>\n          </Box>\n        </Grid>\n        <Hidden lgUp>\n          <Grid item xs={12}>\n            <CategorySelect selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n        <Grid item xs={12} md={12} lg={9}>\n          <Grid container className={classes.postListContainer}>\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              return (\n                <Grid item xs={12} key={post.fields.slug}>\n                  <Card\n                    variant=\"outlined\"\n                    onClick={() =>\n                      setTimeout(() => navigate(post.fields.slug), 300)\n                    }\n                    className={classes.postItemCard}\n                  >\n                    <CardActionArea className={classes.postItemCardArea}>\n                      <Typography gutterBottom variant=\"h2\">\n                        {title}\n                      </Typography>\n                      <small>{post.frontmatter.date}</small>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </Grid>\n        <Hidden mdDown>\n          <Grid item xs={12} md={12} lg={3} className={classes.categoryList}>\n            <CategoryList selectedCategory=\"All\" />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  categoryList: {\n    position: \"sticky\",\n    marginTop: \"20px\",\n    top: \"0px\",\n    alignSelf: \"flex-start\",\n  },\n  postListContainer: {\n    margin: theme.spacing(0, 0, 7, 0),\n  },\n  postItemCardArea: {\n    padding: theme.spacing(3),\n  },\n  postItemCard: {\n    margin: theme.spacing(1, 0, 0, 0),\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(7, 0),\n  },\n  siteTitle: {\n    margin: theme.spacing(4, 0, 0, 0),\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    fontSize: \"48px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"36px\",\n    },\n  },\n  subTitle: {\n    margin: theme.spacing(-1, 0, 0, 0),\n  },\n}))\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: \"google-site-verification\",\n          content: \"D3zX2_B3puuN1KcEveIwHDRw2fcaW00RvY50hcEngIE\",\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}