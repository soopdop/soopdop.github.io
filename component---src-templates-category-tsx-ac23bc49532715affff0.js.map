{"version":3,"sources":["webpack:///./src/templates/category.tsx"],"names":["Category","data","location","pageContext","title","site","siteMetadata","category","allMarkdownRemark","edges","totalCount","tagHeader","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,8GAuCeA,UAhCuD,SAAC,GAIjE,IAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEQC,EAAUH,EAAKI,KAAKC,aAApBF,MACAG,EAAaJ,EAAbI,SAFJ,EAG0BN,EAAKO,kBAA3BC,EAHJ,EAGIA,MAAOC,EAHX,EAGWA,WACTC,EAAeD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,sBACSH,EADT,IAGf,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOA,GACjC,kBAAC,IAAD,CAAKA,MAAOA,IACZ,4BAAKO,GACL,4BAEGF,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAV,EAAUS,EAAKG,YAAfZ,MACR,OACE,wBAAIa,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOV,QAKzB,kBAAC,OAAD,CAAMc,GAAG,KAAT,6BAQC,IAAMC,EAAY","file":"component---src-templates-category-tsx-ac23bc49532715affff0.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { CategoryQuery, SitePageContext } from \"../../graphql-types\"\n\n// SitePageContext로부터 context를 이용해 전달한 값들의 type을 얻을 수 있다.\nconst Category: React.FC<PageProps<CategoryQuery, SitePageContext>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const { title } = data.site.siteMetadata\n  const { category } = pageContext // gatsby-node.js의 createPage에서 넣어준 카테고리 이름.\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\n    } categorized with \"${category}\"`\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <h1>{tagHeader}</h1>\n      <ul>\n        {/* 각 카테고리에 해당하는 포스트의 목록을 출력한다. */}\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport default Category\n\n// 쿼리의 argument인 $category는 page context로 전달 받는다.\nexport const pageQuery = graphql`\n  query Category($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}