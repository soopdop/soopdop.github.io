{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","classes","location","pageContext","useStyles","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","Fragment","container","style","flexDirection","minHeight","item","xs","flexGrow","maxWidth","className","titleBox","src","height","variant","subTitle","lgUp","selectedCategory","md","lg","postListContainer","map","post","frontmatter","fields","slug","key","onClick","setTimeout","navigate","postItemCard","postItemCardArea","gutterBottom","date","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","mdDown","categoryList","pageQuery","makeStyles","theme","root","position","top","alignSelf","margin","spacing","padding","display","alignItems","textOverflow","overflow","whiteSpace","fontSize","breakpoints","down"],"mappings":"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","file":"component---src-pages-index-tsx-5c12235ec8c01194c3c6.js","sourcesContent":["import {\n  AppBar,\n  Box,\n  Card,\n  CardActionArea,\n  Container,\n  CssBaseline,\n  Divider,\n  FormControl,\n  Grid,\n  Hidden,\n  IconButton,\n  InputBase,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  Select,\n  Slide,\n  Toolbar,\n  Typography,\n  useScrollTrigger,\n} from \"@material-ui/core\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport { BlogIndexQuery } from \"../../graphql-types\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport { createStyles, fade, Theme, makeStyles } from \"@material-ui/core/styles\"\nimport CategoryList from \"../components/CategoryList\"\nimport { navigate } from \"gatsby\"\nimport Fab from \"@material-ui/core/Fab\"\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\"\nimport Zoom from \"@material-ui/core/Zoom\"\nimport MyAppBar from \"../components/my-app-bar\"\nimport Footer from \"../components/footer\"\nimport CategorySelect from \"../components/CategorySelect\"\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const classes = useStyles()\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <SEO title=\"All posts\" />\n      <MyAppBar siteTitle={siteTitle} />\n      <Grid\n        container\n        style={{ flexDirection: \"column\", minHeight: \"calc(100vh - 75px)\" }}\n      >\n        <Grid item xs={12} style={{ flexGrow: 1 }}>\n          <Container maxWidth=\"lg\">\n            <Grid container>\n              <Grid item xs={12}>\n                <Box className={classes.titleBox}>\n                  <img src=\"/blog-icon-100.gif\" height=\"100px\" />\n                  <Typography className={classes.siteTitle} variant=\"h1\">\n                    {siteTitle}\n                  </Typography>\n                  <Typography className={classes.subTitle}>\n                    Create What You Want to Use.\n                  </Typography>\n                </Box>\n              </Grid>\n              <Hidden lgUp>\n                <Grid item xs={12}>\n                  <CategorySelect selectedCategory=\"All\" />\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} md={12} lg={9}>\n                <Grid container className={classes.postListContainer}>\n                  {posts.map(post => {\n                    const title = post.frontmatter.title || post.fields.slug\n                    return (\n                      <Grid item xs={12} key={post.fields.slug}>\n                        <Card\n                          variant=\"outlined\"\n                          onClick={() =>\n                            setTimeout(() => navigate(post.fields.slug), 300)\n                          }\n                          className={classes.postItemCard}\n                        >\n                          <CardActionArea className={classes.postItemCardArea}>\n                            <Typography gutterBottom variant=\"h2\">\n                              {title}\n                            </Typography>\n                            <small>{post.frontmatter.date}</small>\n                            <p\n                              dangerouslySetInnerHTML={{\n                                __html:\n                                  post.frontmatter.description || post.excerpt,\n                              }}\n                              itemProp=\"description\"\n                            />\n                          </CardActionArea>\n                        </Card>\n                      </Grid>\n                    )\n                  })}\n                </Grid>\n              </Grid>\n              <Hidden mdDown>\n                <Grid\n                  item\n                  xs={12}\n                  md={12}\n                  lg={3}\n                  className={classes.categoryList}\n                >\n                  <CategoryList selectedCategory=\"All\" />\n                </Grid>\n              </Hidden>\n            </Grid>\n          </Container>\n        </Grid>\n        <Grid item xs={12}>\n          <Footer />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  categoryList: {\n    position: \"sticky\",\n    top: \"75px\",\n    alignSelf: \"flex-start\",\n  },\n  postListContainer: {\n    margin: theme.spacing(0, 0, 7, 0),\n  },\n  postItemCardArea: {\n    padding: theme.spacing(3),\n  },\n  postItemCard: {\n    margin: theme.spacing(1, 0, 0, 0),\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(7, 0),\n  },\n  siteTitle: {\n    margin: theme.spacing(4, 0, 0, 0),\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    fontSize: \"48px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"36px\",\n    },\n  },\n  subTitle: {\n    margin: theme.spacing(-1, 0, 0, 0),\n  },\n}))\n"],"sourceRoot":""}