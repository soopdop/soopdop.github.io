{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","classes","location","pageContext","useStyles","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","Fragment","container","style","flexDirection","minHeight","item","xs","flexGrow","maxWidth","className","titleBox","src","height","variant","subTitle","lgUp","selectedCategory","md","lg","postListContainer","map","post","frontmatter","fields","slug","key","onClick","setTimeout","navigate","postItemCard","postItemCardArea","gutterBottom","date","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","mdDown","categoryList","pageQuery","makeStyles","theme","root","position","top","alignSelf","margin","spacing","padding","display","alignItems","textOverflow","overflow","whiteSpace","fontSize","breakpoints","down"],"mappings":"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","file":"component---src-pages-index-tsx-5c12235ec8c01194c3c6.js","sourcesContent":["import {\r\n  AppBar,\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  Container,\r\n  CssBaseline,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  InputBase,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Slide,\r\n  Toolbar,\r\n  Typography,\r\n  useScrollTrigger,\r\n} from \"@material-ui/core\"\r\nimport { graphql, PageProps } from \"gatsby\"\r\nimport { Link } from \"gatsby-theme-material-ui\"\r\nimport React from \"react\"\r\nimport { BlogIndexQuery } from \"../../graphql-types\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport { createStyles, fade, Theme, makeStyles } from \"@material-ui/core/styles\"\r\nimport CategoryList from \"../components/CategoryList\"\r\nimport { navigate } from \"gatsby\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\"\r\nimport Zoom from \"@material-ui/core/Zoom\"\r\nimport MyAppBar from \"../components/my-app-bar\"\r\nimport Footer from \"../components/footer\"\r\nimport CategorySelect from \"../components/CategorySelect\"\r\n\r\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({\r\n  data,\r\n  location,\r\n  pageContext,\r\n}) => {\r\n  const classes = useStyles()\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <SEO title=\"All posts\" />\r\n      <MyAppBar siteTitle={siteTitle} />\r\n      <Grid\r\n        container\r\n        style={{ flexDirection: \"column\", minHeight: \"calc(100vh - 75px)\" }}\r\n      >\r\n        <Grid item xs={12} style={{ flexGrow: 1 }}>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Box className={classes.titleBox}>\r\n                  <img src=\"/blog-icon-100.gif\" height=\"100px\" />\r\n                  <Typography className={classes.siteTitle} variant=\"h1\">\r\n                    {siteTitle}\r\n                  </Typography>\r\n                  <Typography className={classes.subTitle}>\r\n                    Create What You Want to Use.\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Hidden lgUp>\r\n                <Grid item xs={12}>\r\n                  <CategorySelect selectedCategory=\"All\" />\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item xs={12} md={12} lg={9}>\r\n                <Grid container className={classes.postListContainer}>\r\n                  {posts.map(post => {\r\n                    const title = post.frontmatter.title || post.fields.slug\r\n                    return (\r\n                      <Grid item xs={12} key={post.fields.slug}>\r\n                        <Card\r\n                          variant=\"outlined\"\r\n                          onClick={() =>\r\n                            setTimeout(() => navigate(post.fields.slug), 300)\r\n                          }\r\n                          className={classes.postItemCard}\r\n                        >\r\n                          <CardActionArea className={classes.postItemCardArea}>\r\n                            <Typography gutterBottom variant=\"h2\">\r\n                              {title}\r\n                            </Typography>\r\n                            <small>{post.frontmatter.date}</small>\r\n                            <p\r\n                              dangerouslySetInnerHTML={{\r\n                                __html:\r\n                                  post.frontmatter.description || post.excerpt,\r\n                              }}\r\n                              itemProp=\"description\"\r\n                            />\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                    )\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n              <Hidden mdDown>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={12}\r\n                  lg={3}\r\n                  className={classes.categoryList}\r\n                >\r\n                  <CategoryList selectedCategory=\"All\" />\r\n                </Grid>\r\n              </Hidden>\r\n            </Grid>\r\n          </Container>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Footer />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndex {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  categoryList: {\r\n    position: \"sticky\",\r\n    top: \"75px\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  postListContainer: {\r\n    margin: theme.spacing(0, 0, 7, 0),\r\n  },\r\n  postItemCardArea: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  postItemCard: {\r\n    margin: theme.spacing(1, 0, 0, 0),\r\n  },\r\n  titleBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(7, 0),\r\n  },\r\n  siteTitle: {\r\n    margin: theme.spacing(4, 0, 0, 0),\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    fontSize: \"48px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"36px\",\r\n    },\r\n  },\r\n  subTitle: {\r\n    margin: theme.spacing(-1, 0, 0, 0),\r\n  },\r\n}))\r\n"],"sourceRoot":""}